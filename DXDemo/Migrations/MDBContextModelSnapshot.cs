// <auto-generated />
using System;
using DXDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DXDemo.Migrations
{
    [DbContext(typeof(MDBContext))]
    partial class MDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DXDemo.Models.actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("person_id");

                    b.HasKey("id");

                    b.HasIndex("person_id");

                    b.ToTable("actors");
                });

            modelBuilder.Entity("DXDemo.Models.movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.Property<string>("plot");

                    b.Property<string>("poster");

                    b.Property<int>("producer_id");

                    b.Property<DateTime>("year_of_release");

                    b.HasKey("id");

                    b.HasIndex("producer_id");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("DXDemo.Models.movie_actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("actor_id");

                    b.Property<int>("movie_id");

                    b.HasKey("id");

                    b.HasIndex("actor_id");

                    b.HasIndex("movie_id");

                    b.ToTable("movie_actors");
                });

            modelBuilder.Entity("DXDemo.Models.person_info", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bio");

                    b.Property<string>("dob");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<string>("sex");

                    b.HasKey("id");

                    b.ToTable("person_infos");
                });

            modelBuilder.Entity("DXDemo.Models.producer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("person_id");

                    b.HasKey("id");

                    b.HasIndex("person_id");

                    b.ToTable("producers");
                });

            modelBuilder.Entity("DXDemo.Models.actor", b =>
                {
                    b.HasOne("DXDemo.Models.person_info", "person_info")
                        .WithMany()
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DXDemo.Models.movie", b =>
                {
                    b.HasOne("DXDemo.Models.producer", "producer")
                        .WithMany()
                        .HasForeignKey("producer_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DXDemo.Models.movie_actor", b =>
                {
                    b.HasOne("DXDemo.Models.actor", "actor")
                        .WithMany("movie_actors")
                        .HasForeignKey("actor_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DXDemo.Models.movie", "movie")
                        .WithMany("movie_actors")
                        .HasForeignKey("movie_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DXDemo.Models.producer", b =>
                {
                    b.HasOne("DXDemo.Models.person_info", "person_info")
                        .WithMany()
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
